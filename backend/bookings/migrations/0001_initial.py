# Generated by Django 5.0.1 on 2025-10-15 02:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_number', models.CharField(max_length=20, unique=True)),
                ('scheduled_start', models.DateTimeField()),
                ('scheduled_end', models.DateTimeField()),
                ('actual_start', models.DateTimeField(blank=True, null=True)),
                ('actual_end', models.DateTimeField(blank=True, null=True)),
                ('location_address', models.TextField(blank=True)),
                ('location_coordinates', models.JSONField(blank=True, default=dict)),
                ('is_online_service', models.BooleanField(default=False)),
                ('booking_type', models.CharField(choices=[('REGULAR', 'Regular Booking'), ('URGENT', 'Urgent Booking'), ('RECURRING', 'Recurring Booking')], default='REGULAR', max_length=15)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RESCHEDULED', 'Rescheduled'), ('DISPUTED', 'Disputed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=15)),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('additional_fees', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('service_data', models.JSONField(blank=True, default=dict, help_text='Service-specific booking data')),
                ('special_requirements', models.TextField(blank=True)),
                ('client_notes', models.TextField(blank=True)),
                ('partner_notes', models.TextField(blank=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('client_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('client_review', models.TextField(blank=True)),
                ('partner_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('partner_review', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('availability_slot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='services.availabilityslot')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_bookings', to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partner_bookings', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='services.service')),
                ('service_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_bookings', to='accounts.location')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingDispute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dispute_type', models.CharField(choices=[('SERVICE_NOT_PROVIDED', 'Service Not Provided'), ('POOR_QUALITY', 'Poor Quality'), ('BILLING_ISSUE', 'Billing Issue'), ('CANCELLATION', 'Cancellation Issue'), ('OTHER', 'Other')], max_length=25)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_REVIEW', 'In Review'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='OPEN', max_length=15)),
                ('description', models.TextField()),
                ('evidence_documents', models.JSONField(blank=True, default=list)),
                ('resolution', models.TextField(blank=True)),
                ('resolution_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dispute', to='bookings.booking')),
                ('disputed_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disputed_against', to=settings.AUTH_USER_MODEL)),
                ('raised_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raised_disputes', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_disputes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking Dispute',
                'verbose_name_plural': 'Booking Disputes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('INVOICE', 'Invoice'), ('RECEIPT', 'Receipt'), ('CONTRACT', 'Contract'), ('PROOF_OF_SERVICE', 'Proof of Service'), ('CLIENT_DOCUMENT', 'Client Document'), ('OTHER', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_url', models.URLField()),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('file_type', models.CharField(max_length=100)),
                ('is_public', models.BooleanField(default=False)),
                ('is_client_visible', models.BooleanField(default=True)),
                ('is_partner_visible', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='bookings.booking')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking Document',
                'verbose_name_plural': 'Booking Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('message_type', models.CharField(choices=[('TEXT', 'Text Message'), ('SYSTEM', 'System Message'), ('STATUS_UPDATE', 'Status Update'), ('FILE', 'File Attachment')], default='TEXT', max_length=20)),
                ('attachments', models.JSONField(blank=True, default=list, help_text='List of file URLs')),
                ('is_read', models.BooleanField(default=False)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='bookings.booking')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking Message',
                'verbose_name_plural': 'Booking Messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(blank=True, choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RESCHEDULED', 'Rescheduled'), ('DISPUTED', 'Disputed'), ('REFUNDED', 'Refunded')], max_length=15)),
                ('new_status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('RESCHEDULED', 'Rescheduled'), ('DISPUTED', 'Disputed'), ('REFUNDED', 'Refunded')], max_length=15)),
                ('reason', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='bookings.booking')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Booking Status History',
                'verbose_name_plural': 'Booking Status Histories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecurringBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recurrence_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('CUSTOM', 'Custom')], max_length=10)),
                ('recurrence_interval', models.PositiveIntegerField(default=1, help_text='Every X days/weeks/months')),
                ('recurrence_days', models.JSONField(blank=True, default=list, help_text='Days of week for weekly recurrence')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('max_occurrences', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_pattern', to='bookings.booking')),
            ],
            options={
                'verbose_name': 'Recurring Booking',
                'verbose_name_plural': 'Recurring Bookings',
            },
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['booking_number'], name='bookings_bo_booking_03d631_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['client', 'status'], name='bookings_bo_client__09b1d6_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['partner', 'status'], name='bookings_bo_partner_aca0be_idx'),
        ),
        migrations.AddIndex(
            model_name='booking',
            index=models.Index(fields=['scheduled_start'], name='bookings_bo_schedul_d03604_idx'),
        ),
    ]
