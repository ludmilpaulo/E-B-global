# Generated by Django 5.0.1 on 2025-10-15 02:26

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('hour', models.PositiveIntegerField(blank=True, help_text='Hour of day (0-23)', null=True)),
                ('response_time_ms', models.PositiveIntegerField(default=0)),
                ('error_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('uptime_percentage', models.DecimalField(decimal_places=2, default=100, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('api_requests', models.PositiveIntegerField(default=0)),
                ('active_users', models.PositiveIntegerField(default=0)),
                ('concurrent_bookings', models.PositiveIntegerField(default=0)),
                ('cpu_usage_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('memory_usage_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'System Metrics',
                'verbose_name_plural': 'System Metrics',
                'ordering': ['-date', '-hour'],
                'unique_together': {('date', 'hour')},
            },
        ),
        migrations.CreateModel(
            name='AnalyticsMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], default='DAILY', max_length=10)),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('new_bookings', models.PositiveIntegerField(default=0)),
                ('completed_bookings', models.PositiveIntegerField(default=0)),
                ('cancelled_bookings', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('platform_fees', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('partner_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('active_clients', models.PositiveIntegerField(default=0)),
                ('active_partners', models.PositiveIntegerField(default=0)),
                ('new_clients', models.PositiveIntegerField(default=0)),
                ('new_partners', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.servicecategory')),
                ('country', models.ForeignKey(blank=True, limit_choices_to={'location_type': 'COUNTRY'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_metrics_country', to='accounts.location')),
                ('province', models.ForeignKey(blank=True, limit_choices_to={'location_type': 'PROVINCE'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_metrics_province', to='accounts.location')),
            ],
            options={
                'verbose_name': 'Analytics Metric',
                'verbose_name_plural': 'Analytics Metrics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date', 'period_type'], name='analytics_a_date_bbe9a2_idx'), models.Index(fields=['country', 'date'], name='analytics_a_country_876549_idx'), models.Index(fields=['category', 'date'], name='analytics_a_categor_7a7b89_idx')],
                'unique_together': {('date', 'period_type', 'country', 'province', 'category')},
            },
        ),
        migrations.CreateModel(
            name='ConversionFunnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('stage', models.CharField(choices=[('VISIT', 'Visit'), ('SERVICE_VIEW', 'Service View'), ('BOOKING_START', 'Booking Started'), ('BOOKING_COMPLETE', 'Booking Completed'), ('PAYMENT', 'Payment Made'), ('SERVICE_COMPLETED', 'Service Completed')], max_length=20)),
                ('users_count', models.PositiveIntegerField(default=0)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.servicecategory')),
                ('country', models.ForeignKey(blank=True, limit_choices_to={'location_type': 'COUNTRY'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.location')),
            ],
            options={
                'verbose_name': 'Conversion Funnel',
                'verbose_name_plural': 'Conversion Funnels',
                'ordering': ['-date'],
                'unique_together': {('date', 'country', 'category', 'stage')},
            },
        ),
        migrations.CreateModel(
            name='GeographicAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('YEARLY', 'Yearly')], default='DAILY', max_length=10)),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('active_partners', models.PositiveIntegerField(default=0)),
                ('active_clients', models.PositiveIntegerField(default=0)),
                ('top_categories', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geographic_analytics', to='accounts.location')),
            ],
            options={
                'verbose_name': 'Geographic Analytics',
                'verbose_name_plural': 'Geographic Analytics',
                'ordering': ['-date'],
                'unique_together': {('date', 'period_type', 'location')},
            },
        ),
        migrations.CreateModel(
            name='PartnerAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('completed_bookings', models.PositiveIntegerField(default=0)),
                ('cancelled_bookings', models.PositiveIntegerField(default=0)),
                ('no_show_bookings', models.PositiveIntegerField(default=0)),
                ('total_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('pending_earnings', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('platform_fees_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('response_time_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('repeat_clients', models.PositiveIntegerField(default=0)),
                ('new_clients', models.PositiveIntegerField(default=0)),
                ('client_satisfaction_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Partner Analytics',
                'verbose_name_plural': 'Partner Analytics',
                'ordering': ['-period_end'],
                'unique_together': {('partner', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='ServicePerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('total_bookings', models.PositiveIntegerField(default=0)),
                ('completed_bookings', models.PositiveIntegerField(default=0)),
                ('cancelled_bookings', models.PositiveIntegerField(default=0)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_booking_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('average_rating', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('favorites_count', models.PositiveIntegerField(default=0)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performance_analytics', to='services.service')),
            ],
            options={
                'verbose_name': 'Service Performance',
                'verbose_name_plural': 'Service Performance',
                'ordering': ['-period_end'],
                'unique_together': {('service', 'period_start', 'period_end')},
            },
        ),
        migrations.CreateModel(
            name='UserEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('page_views', models.PositiveIntegerField(default=0)),
                ('session_duration_minutes', models.PositiveIntegerField(default=0)),
                ('actions_count', models.PositiveIntegerField(default=0)),
                ('services_viewed', models.PositiveIntegerField(default=0)),
                ('bookings_made', models.PositiveIntegerField(default=0)),
                ('messages_sent', models.PositiveIntegerField(default=0)),
                ('reviews_written', models.PositiveIntegerField(default=0)),
                ('web_sessions', models.PositiveIntegerField(default=0)),
                ('mobile_sessions', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Engagement',
                'verbose_name_plural': 'User Engagement',
                'ordering': ['-date'],
                'unique_together': {('user', 'date')},
            },
        ),
    ]
